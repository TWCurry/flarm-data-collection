AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template to deploy API to store and fetch data from OGN

Globals:
  Function:
    Timeout: 120

Resources:

  #### Functions ####

  # Function to fetch data from OGN and store in DDB
  dataFetchFunction:
    Type: AWS::Serverless::Function 
    Properties:
      FunctionName: ognDataFetchFunction
      CodeUri: lambdaCode/
      Handler: dataFetchFunction.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          loMax: 3.6474609375000004
          loMin: -13.710937500000002
          laMax: 59.355596110016315
          laMin: 49.61070993807422
          tableName: flarmData
          logGroupName: ognDataFetchFunctionInvocations
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonSQSFullAccess
        - CloudWatchLogsFullAccess

  schedulingFunction:
    Type: AWS::Serverless::Function 
    Properties:
      FunctionName: ognSchedulingFunction
      CodeUri: lambdaCode/
      Handler: schedulingFunction.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          functionToTrigger: !Ref dataFetchFunction
          queueUrl: !Ref schedulingQueue
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: 'cron(* 6-17 * * ? *)'
            Name: ognDataFetchRule
            Enabled: True
      Policies:
        - AmazonSQSFullAccess
  
  fetchFlightDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ognFetchFlightDataFunction
      CodeUri: lambdaCode/
      Handler: fetchFlightData.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          tableName: flarmData
      Policies:
      - AmazonDynamoDBFullAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /fetchFlightData
            Method: get

  #### SQS Queue ####

  schedulingQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: False
      MessageRetentionPeriod: 60 # No message should need to exist for more than a minute
      QueueName: ognFunctionSchedulingQueue
      VisibilityTimeout: 60 # Long enough that the message will be hidden until it's retention period has passed

  queueLambdaMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties: 
      BatchSize: 1
      Enabled: True
      EventSourceArn: !GetAtt schedulingQueue.Arn
      FunctionName: !Ref dataFetchFunction